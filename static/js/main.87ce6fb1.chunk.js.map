{"version":3,"sources":["components/Header.js","components/MovieCard.js","api/tmdbApi.js","components/MovieList.js","pages/HomePage.js","pages/MoviesPage.js","components/TVShowCard.js","components/TVShowList.js","pages/TVShowsPage.js","pages/MovieDetailPage.js","pages/TVShowDetailPage.js","components/Footer.js","App.js","index.js"],"names":["Header","_ref","toggleTheme","theme","onSearch","menuOpen","setMenuOpen","useState","searchTerm","setSearchTerm","React","createElement","className","Link","to","src","alt","type","placeholder","value","onChange","e","target","onClick","handleMenuToggle","aria-label","MovieCard","movie","id","poster_path","title","vote_average","API_KEY","BASE_URL","fetchTrendingMovies","async","page","arguments","length","undefined","axios","get","params","api_key","data","results","error","console","fetchPopularTVShows","MovieList","currentPage","searchQuery","limit","movies","setMovies","useEffect","trendingMovies","getTrendingMovies","filteredMovies","filter","toLowerCase","includes","displayedMovies","slice","map","key","HomePage","MoviesPage","setCurrentPage","handlePageClick","disabled","Array","from","_","index","TVShowCard","show","name","TVShowList","shows","setShows","filteredShows","getTVShows","TVShowsPage","MovieDetailPage","movieId","useParams","setMovie","movieData","find","m","parseInt","getMovieDetails","release_date","overview","TVShowDetailPage","showId","setShow","showData","s","getShowDetails","first_air_date","Footer","Date","getFullYear","href","App","setTheme","setSearchQuery","Router","prevTheme","Routes","Route","path","element","ReactDOM","render","document","getElementById"],"mappings":"8cAsDeA,MAjDAC,IAAuC,IAAtC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUH,EAC9C,MAAOI,EAAUC,GAAeC,oBAAS,IAClCC,EAAYC,GAAiBF,mBAAS,IAW7C,OACEG,IAAAC,cAAA,UAAQC,UAAW,UAAUT,GAC3BO,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACE,IAAI,CAACC,GAAG,KACPJ,IAAAC,cAAA,OAAKI,IAAI,yEAAyEC,IAAI,gBAG1FN,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,SACEM,KAAK,OACLC,YAAY,iCACZC,MAAOX,EACPY,SAlBkBC,IAC1BZ,EAAcY,EAAEC,OAAOH,OACvBf,EAASiB,EAAEC,OAAOH,WAmBdT,IAAAC,cAAA,OAAKC,UAAW,gBAAeP,EAAW,OAAS,KACjDK,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,KAAI,SACjBJ,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,WAAU,WACvBJ,IAAAC,cAAA,UAAID,IAAAC,cAACE,IAAI,CAACC,GAAG,aAAY,eAG7BJ,IAAAC,cAAA,UAAQC,UAAU,YAAYW,QAhCXC,KACvBlB,GAAaD,KAgCPK,IAAAC,cAAA,QAAMC,UAAU,QAChBF,IAAAC,cAAA,QAAMC,UAAU,QAChBF,IAAAC,cAAA,QAAMC,UAAU,SAElBF,IAAAC,cAAA,UAAQC,UAAU,mBAAmBW,QAASrB,EAAauB,aAAW,gBACzD,UAAVtB,EAAoB,eAAO,mB,MC5BvBuB,MAdGzB,IAAgB,IAAf,MAAE0B,GAAO1B,EAC1B,OACES,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACE,IAAI,CAACC,GAAI,WAAWa,EAAMC,IACzBlB,IAAAC,cAAA,OAAKI,IAAK,kCAAkCY,EAAME,YAAeb,IAAKW,EAAMG,QAC5EpB,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,UAAKgB,EAAMG,OACXpB,IAAAC,cAAA,SAAG,UAAGgB,EAAMI,kB,QCTtB,MAAMC,EAAU,mCACVC,EAAW,+BAGJC,EAAsBC,iBAAqB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/C,IAOE,aANuBG,IAAMC,IAAOR,EAAH,uBAAmC,CAClES,OAAQ,CACNC,QAASX,EACTI,WAGYQ,KAAKC,QACrB,MAAOC,GAEP,OADAC,QAAQD,MAAM,kCAAmCA,GAC1C,KAKEE,EAAsBb,iBAAqB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/C,IAOE,aANuBG,IAAMC,IAAOR,EAAH,cAA0B,CACzDS,OAAQ,CACNC,QAASX,EACTI,WAGYQ,KAAKC,QACrB,MAAOC,GAEP,OADAC,QAAQD,MAAM,2BAA4BA,GACnC,K,MCDIG,MA5BGhD,IAAiD,IAAhD,MAAEE,EAAK,YAAE+C,EAAW,YAAEC,EAAW,MAAEC,GAAOnD,EAC3D,MAAOoD,EAAQC,GAAa/C,mBAAS,IAErCgD,oBAAU,KACkBpB,WACxB,MAAMqB,QAAuBtB,EAAoBgB,GACjDI,EAAUE,IAEZC,IACC,CAACP,IAGJ,MAAMQ,EAAiBL,EAAOM,OAAOhC,GACnCA,EAAMG,MAAM8B,cAAcC,SAASV,EAAYS,gBAI3CE,EAAkBV,EAAQM,EAAeK,MAAM,EAAGX,GAASM,EAEjE,OACEhD,IAAAC,cAAA,OAAKC,UAAW,cAAcT,GAC3B2D,EAAgBE,IAAIrC,GACnBjB,IAAAC,cAACe,EAAS,CAACuC,IAAKtC,EAAMC,GAAID,MAAOA,O,MCR1BuC,MAfEjE,IAA6B,IAA5B,MAAEE,EAAK,YAAEgD,GAAalD,EACtC,OACES,IAAAC,cAAA,OAAKC,UAAW,YAAYT,GAC1BO,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAI,qEAGRD,IAAAC,cAAA,MAAIC,UAAU,mBAAkB,mBAEhCF,IAAAC,cAACsC,EAAS,CAAC9C,MAAOA,EAAOgD,YAAaA,EAAaC,MAAO,IAAK,M,MC6BtDe,MAvCIlE,IAA6B,IAA5B,MAAEE,EAAK,YAAEgD,GAAalD,EACxC,MAAOiD,EAAakB,GAAkB7D,mBAAS,GAGzC8D,EAAmBjC,GAASgC,EAAehC,GAEjD,OACE1B,IAAAC,cAAA,OAAKC,UAAW,eAAeT,GAC7BO,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAACsC,EAAS,CAAC9C,MAAOA,EAAO+C,YAAaA,EAAaC,YAAaA,IAChEzC,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,UACEY,QAASA,IAAM8C,EAAgBnB,EAAc,GAC7CoB,SAA0B,IAAhBpB,EACVtC,UAAW,qBAAqBT,GACjC,KAGAoE,MAAMC,KAAK,CAAElC,OAhBD,IAgBuB,CAACmC,EAAGC,IACtChE,IAAAC,cAAA,UACEsD,IAAKS,EAAQ,EACbnD,QAASA,IAAM8C,EAAgBK,EAAQ,GACvC9D,UAAW,qBAAqBT,KAAS+C,IAAgBwB,EAAQ,EAAI,SAAW,MAE/EA,EAAQ,IAGbhE,IAAAC,cAAA,UACEY,QAASA,IAAM8C,EAAgBnB,EAAc,GAC7CoB,SA3BW,KA2BDpB,EACVtC,UAAW,qBAAqBT,GACjC,Q,MChBMwE,MAdI1E,IAAe,IAAd,KAAE2E,GAAM3E,EAC1B,OACES,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAACE,IAAI,CAACC,GAAI,aAAa8D,EAAKhD,IAC1BlB,IAAAC,cAAA,OAAKI,IAAK,kCAAkC6D,EAAK/C,YAAeb,IAAK4D,EAAKC,OAC1EnE,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAKiE,EAAKC,MACVnE,IAAAC,cAAA,SAAG,UAAGiE,EAAK7C,kB,MCgBN+C,MAvBI7E,IAA0C,IAAzC,MAAEE,EAAK,YAAE+C,EAAW,YAAEC,GAAalD,EACrD,MAAO8E,EAAOC,GAAYzE,mBAAS,IAanC,OAXAgD,oBAAU,KACWpB,WACjB,MACM8C,SADgBjC,EAAoBE,IACZS,OAAOiB,GACnCA,EAAKC,KAAKjB,cAAcC,SAASV,EAAYS,gBAE/CoB,EAASC,IAEXC,IACC,CAAChC,EAAaC,IAGfzC,IAAAC,cAAA,OAAKC,UAAW,eAAeT,GAC5B4E,EAAMf,IAAIY,GACTlE,IAAAC,cAACgE,EAAU,CAACV,IAAKW,EAAKhD,GAAIgD,KAAMA,O,MCqBzBO,MAvCKlF,IAA6B,IAA5B,MAAEE,EAAK,YAAEgD,GAAalD,EACzC,MAAOiD,EAAakB,GAAkB7D,mBAAS,GAGzC8D,EAAmBjC,GAASgC,EAAehC,GAEjD,OACE1B,IAAAC,cAAA,OAAKC,UAAW,gBAAgBT,GAC9BO,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACmE,EAAU,CAAC3E,MAAOA,EAAO+C,YAAaA,EAAaC,YAAaA,IACjEzC,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,UACEY,QAASA,IAAM8C,EAAgBnB,EAAc,GAC7CoB,SAA0B,IAAhBpB,EACVtC,UAAW,qBAAqBT,GACjC,KAGAoE,MAAMC,KAAK,CAAElC,OAhBD,IAgBuB,CAACmC,EAAGC,IACtChE,IAAAC,cAAA,UACEsD,IAAKS,EAAQ,EACbnD,QAASA,IAAM8C,EAAgBK,EAAQ,GACvC9D,UAAW,qBAAqBT,KAAS+C,IAAgBwB,EAAQ,EAAI,SAAW,MAE/EA,EAAQ,IAGbhE,IAAAC,cAAA,UACEY,QAASA,IAAM8C,EAAgBnB,EAAc,GAC7CoB,SA3BW,KA2BDpB,EACVtC,UAAW,qBAAqBT,GACjC,Q,MCIMiF,MAjCSnF,IAAgB,IAAf,MAAEE,GAAOF,EAChC,MAAM,QAAEoF,GAAYC,eACb3D,EAAO4D,GAAYhF,mBAAS,MAYnC,OAVAgD,oBAAU,KACgBpB,WACtB,MACMqD,SADetD,KACIuD,KAAMC,GAAMA,EAAE9D,KAAO+D,SAASN,IACvDE,EAASC,IAGXI,IACC,CAACP,IAEC1D,EAKHjB,IAAAC,cAAA,OAAKC,UAAW,qBAAqBT,GAAS,IAC5CO,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,OAAKI,IAAK,kCAAkCY,EAAME,YAAeb,IAAKW,EAAMG,SAE9EpB,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,UAAKgB,EAAMG,OACXpB,IAAAC,cAAA,KAAGC,UAAU,gBAAe,UAAGe,EAAMI,cACrCrB,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,iBAAee,EAAMkE,cAAgB,WAClEnF,IAAAC,cAAA,KAAGC,UAAU,qBAAqBe,EAAMmE,UAAY,+BAZjDpF,IAAAC,cAAA,MAAIC,UAAU,mBAAkB,qB,MCkB5BmF,MAjCU9F,IAAgB,IAAf,MAAEE,GAAOF,EACjC,MAAM,OAAE+F,GAAWV,eACZV,EAAMqB,GAAW1F,mBAAS,MAYjC,OAVAgD,oBAAU,KACepB,WACrB,MACM+D,SADclD,KACGyC,KAAMU,GAAMA,EAAEvE,KAAO+D,SAASK,IACrDC,EAAQC,IAGVE,IACC,CAACJ,IAECpB,EAKHlE,IAAAC,cAAA,OAAKC,UAAW,sBAAsBT,GAAS,IAC7CO,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,OAAKI,IAAK,kCAAkC6D,EAAK/C,YAAeb,IAAK4D,EAAKC,QAE5EnE,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,UAAKiE,EAAKC,MACVnE,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,UAAGgE,EAAK7C,cACrCrB,IAAAC,cAAA,KAAGC,UAAU,kBAAiB,iBAAegE,EAAKyB,gBAClD3F,IAAAC,cAAA,KAAGC,UAAU,sBAAsBgE,EAAKkB,YAZrCpF,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,uB,MCF7B0F,MAfArG,IAAgB,IAAf,MAAEE,GAAOF,EACvB,OACES,IAAAC,cAAA,UAAQC,UAAW,UAAUT,GAAS,IACpCO,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,SAAG,SAAQ,IAAI4F,MAAOC,cAAc,kCACpC9F,IAAAC,cAAA,SACED,IAAAC,cAAA,KAAG8F,KAAK,YAAW,kBAAkB,KACrC/F,IAAAC,cAAA,KAAG8F,KAAK,UAAS,qBAAqB,KACtC/F,IAAAC,cAAA,KAAG8F,KAAK,YAAW,gB,MCwBdC,MAzBf,WACE,MAAOvG,EAAOwG,GAAYpG,mBAAS,UAC5B4C,EAAayD,GAAkBrG,mBAAS,IAM/C,OACEG,IAAAC,cAAA,OAAKC,UAAW,OAAOT,GACrBO,IAAAC,cAACkG,IAAM,KACLnG,IAAAC,cAACX,EAAM,CAACE,YAPMA,KAClByG,EAAUG,GAA6B,UAAdA,EAAwB,OAAS,UAMpB3G,MAAOA,EAAOC,SAAUwG,IAC1DlG,IAAAC,cAACoG,IAAM,KACLrG,IAAAC,cAACqG,IAAK,CAACC,KAAK,IAAIC,QAASxG,IAAAC,cAACuD,EAAQ,CAAC/D,MAAOA,EAAOgD,YAAaA,MAC9DzC,IAAAC,cAACqG,IAAK,CAACC,KAAK,UAAUC,QAASxG,IAAAC,cAACwD,EAAU,CAAChE,MAAOA,EAAOgD,YAAaA,MACtEzC,IAAAC,cAACqG,IAAK,CAACC,KAAK,mBAAmBC,QAASxG,IAAAC,cAACyE,EAAe,QACxD1E,IAAAC,cAACqG,IAAK,CAACC,KAAK,YAAYC,QAASxG,IAAAC,cAACwE,EAAW,CAAChF,MAAOA,EAAOgD,YAAaA,MACzEzC,IAAAC,cAACqG,IAAK,CAACC,KAAK,oBAAoBC,QAASxG,IAAAC,cAACoF,EAAgB,SAE5DrF,IAAAC,cAAC2F,EAAM,CAACnG,MAAOA,OCtBvBgH,IAASC,OAAO1G,IAAAC,cAAC+F,EAAG,MAAKW,SAASC,eAAe,W","file":"static/js/main.87ce6fb1.chunk.js","sourcesContent":["// src/components/Header.js\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = ({ toggleTheme, theme, onSearch }) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleMenuToggle = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    onSearch(e.target.value); // Call the onSearch function passed as a prop\r\n  };\r\n\r\n  return (\r\n    <header className={`header ${theme}`}>\r\n      <div className=\"header__container\">\r\n        <div className=\"header__logo\">\r\n          <Link to=\"/\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/69/IMDB_Logo_2016.svg\" alt=\"IMDb Logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"header__search\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for movies, TV shows...\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n          />\r\n        </div>\r\n        <nav className={`header__nav ${menuOpen ? 'open' : ''}`}>\r\n          <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/movies\">Movies</Link></li>\r\n            <li><Link to=\"/tv-shows\">TV Shows</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <button className=\"hamburger\" onClick={handleMenuToggle}>\r\n          <span className=\"bar\"></span>\r\n          <span className=\"bar\"></span>\r\n          <span className=\"bar\"></span>\r\n        </button>\r\n        <button className=\"theme-toggle-btn\" onClick={toggleTheme} aria-label=\"Toggle theme\">\r\n          {theme === 'light' ? '🌙' : '☀️'}\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// src/components/MovieCard.js\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <Link to={`/movies/${movie.id}`}>\r\n        <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} />\r\n        <div className=\"movie-card__info\">\r\n          <h3>{movie.title}</h3>\r\n          <p>⭐ {movie.vote_average}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","// src/api/tmdbApi.js\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '39f9518d5c407e0c16441726f8c888fa';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n// Fetch Trending Movies with Pagination\r\nexport const fetchTrendingMovies = async (page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/trending/movie/week`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        page,\r\n      },\r\n    });\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching trending movies:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Fetch Popular TV Shows with Pagination\r\nexport const fetchPopularTVShows = async (page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/tv/popular`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        page,\r\n      },\r\n    });\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching TV shows:', error);\r\n    return [];\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport MovieCard from './MovieCard';\r\nimport { fetchTrendingMovies } from '../api/tmdbApi';\r\nimport \"./MovieList.css\";\r\n\r\nconst MovieList = ({ theme, currentPage, searchQuery, limit }) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getTrendingMovies = async () => {\r\n      const trendingMovies = await fetchTrendingMovies(currentPage);\r\n      setMovies(trendingMovies);\r\n    };\r\n    getTrendingMovies();\r\n  }, [currentPage]);\r\n\r\n  // Filter movies based on the search query\r\n  const filteredMovies = movies.filter(movie =>\r\n    movie.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  // Apply limit if provided\r\n  const displayedMovies = limit ? filteredMovies.slice(0, limit) : filteredMovies;\r\n\r\n  return (\r\n    <div className={`movie-list ${theme}`}>\r\n      {displayedMovies.map(movie => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport MovieList from '../components/MovieList';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = ({ theme, searchQuery }) => {\r\n  return (\r\n    <div className={`homepage ${theme}`}>\r\n      <div className=\"homepage__hero\">\r\n        <div className=\"homepage__overlay\">\r\n          <h2>“Cinema is a mirror by which we often see ourselves.”</h2>\r\n        </div>\r\n      </div>\r\n      <h1 className=\"homepage__title\">Trending Movies</h1>\r\n      {/* Limit the number of movies to display on the homepage */}\r\n      <MovieList theme={theme} searchQuery={searchQuery} limit={6} /> {/* Limit to 6 movies */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport MovieList from '../components/MovieList';\r\nimport './MoviesPage.css';\r\n\r\nconst MoviesPage = ({ theme, searchQuery }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 20;\r\n\r\n  const handlePageClick = (page) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div className={`movies-page ${theme}`}>\r\n      <h1>Movies</h1>\r\n      <MovieList theme={theme} currentPage={currentPage} searchQuery={searchQuery} />\r\n      <div className=\"pagination-controls\">\r\n        <button\r\n          onClick={() => handlePageClick(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n          className={`pagination-button ${theme}`}\r\n        >\r\n          &lt;\r\n        </button>\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageClick(index + 1)}\r\n            className={`pagination-number ${theme} ${currentPage === index + 1 ? 'active' : ''}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        <button\r\n          onClick={() => handlePageClick(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n          className={`pagination-button ${theme}`}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","// src/components/TVShowCard.js\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link for navigation\r\nimport './TVShowCard.css';\r\n\r\nconst TVShowCard = ({ show }) => { \r\n  return (\r\n    <div className=\"tvshow-card\">\r\n      <Link to={`/tv-shows/${show.id}`}>\r\n        <img src={`https://image.tmdb.org/t/p/w200${show.poster_path}`} alt={show.name} />\r\n        <div className=\"tvshow-card__info\">\r\n          <h3>{show.name}</h3>\r\n          <p>⭐ {show.vote_average}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TVShowCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TVShowCard from './TVShowCard';\r\nimport { fetchPopularTVShows } from '../api/tmdbApi';\r\nimport './TVShowList.css';\r\n\r\nconst TVShowList = ({ theme, currentPage, searchQuery }) => {\r\n  const [shows, setShows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getTVShows = async () => {\r\n      const tvShows = await fetchPopularTVShows(currentPage);\r\n      const filteredShows = tvShows.filter(show =>\r\n        show.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setShows(filteredShows);\r\n    };\r\n    getTVShows();\r\n  }, [currentPage, searchQuery]);\r\n\r\n  return (\r\n    <div className={`tvshow-list ${theme}`}>\r\n      {shows.map(show => (\r\n        <TVShowCard key={show.id} show={show} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TVShowList;\r\n","import React, { useState } from 'react';\r\nimport TVShowList from '../components/TVShowList';\r\nimport './TVShowsPage.css';\r\n\r\nconst TVShowsPage = ({ theme, searchQuery }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 20;\r\n\r\n  const handlePageClick = (page) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div className={`tvshows-page ${theme}`}>\r\n      <h1>TV Shows</h1>\r\n      <TVShowList theme={theme} currentPage={currentPage} searchQuery={searchQuery} />\r\n      <div className=\"pagination-controls\">\r\n        <button\r\n          onClick={() => handlePageClick(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n          className={`pagination-button ${theme}`}\r\n        >\r\n          &lt;\r\n        </button>\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageClick(index + 1)}\r\n            className={`pagination-number ${theme} ${currentPage === index + 1 ? 'active' : ''}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        <button\r\n          onClick={() => handlePageClick(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n          className={`pagination-button ${theme}`}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TVShowsPage;\r\n","// src/pages/MovieDetailPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchTrendingMovies } from '../api/tmdbApi'; // Fetch from TMDb API\r\nimport './MovieDetailPage.css';\r\n\r\nconst MovieDetailPage = ({ theme }) => { \r\n  const { movieId } = useParams(); // Get the movie ID from the URL\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n      const movies = await fetchTrendingMovies();\r\n      const movieData = movies.find((m) => m.id === parseInt(movieId));\r\n      setMovie(movieData);\r\n    };\r\n\r\n    getMovieDetails();\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return <h1 className=\"movie-not-found\">Movie not found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className={`movie-detail-page ${theme}`}> {/* Apply theme class */}\r\n      <div className=\"movie-detail__poster\">\r\n        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n      </div>\r\n      <div className=\"movie-detail__info\">\r\n        <h1>{movie.title}</h1>\r\n        <p className=\"movie-rating\">⭐ {movie.vote_average}</p>\r\n        <p className=\"movie-release\">Release Date: {movie.release_date || 'Unknown'}</p>\r\n        <p className=\"movie-description\">{movie.overview || 'No description available.'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n","// src/pages/TVShowDetailPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPopularTVShows } from '../api/tmdbApi'; // Fetch from TMDb API\r\nimport './TVShowDetailPage.css';\r\n\r\nconst TVShowDetailPage = ({ theme }) => { \r\n  const { showId } = useParams(); // Get the TV show ID from the URL\r\n  const [show, setShow] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getShowDetails = async () => {\r\n      const shows = await fetchPopularTVShows();\r\n      const showData = shows.find((s) => s.id === parseInt(showId));\r\n      setShow(showData);\r\n    };\r\n\r\n    getShowDetails();\r\n  }, [showId]);\r\n\r\n  if (!show) {\r\n    return <h1 className=\"tvshow-not-found\">TV Show not found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className={`tvshow-detail-page ${theme}`}> {/* Apply theme class */}\r\n      <div className=\"tvshow-detail__poster\">\r\n        <img src={`https://image.tmdb.org/t/p/w500${show.poster_path}`} alt={show.name} />\r\n      </div>\r\n      <div className=\"tvshow-detail__info\">\r\n        <h1>{show.name}</h1>\r\n        <p className=\"tvshow-rating\">⭐ {show.vote_average}</p>\r\n        <p className=\"tvshow-release\">Release Date: {show.first_air_date}</p>\r\n        <p className=\"tvshow-description\">{show.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TVShowDetailPage;\r\n","// src/components/Footer.js\r\nimport React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = ({ theme }) => { // Accept theme prop here\r\n  return (\r\n    <footer className={`footer ${theme}`}> {/* Add theme class */}\r\n      <div className=\"footer__container\">\r\n        <p>&copy; {new Date().getFullYear()} MovieDB. All Rights Reserved.</p>\r\n        <p>\r\n          <a href=\"/privacy\">Privacy Policy</a> | \r\n          <a href=\"/terms\"> Terms of Service</a> | \r\n          <a href=\"/contact\"> Contact</a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport MoviesPage from './pages/MoviesPage';\r\nimport TVShowsPage from './pages/TVShowsPage';\r\nimport MovieDetailPage from './pages/MovieDetailPage';\r\nimport TVShowDetailPage from './pages/TVShowDetailPage';\r\nimport Footer from './components/Footer';\r\nimport './theme.css';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('light');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${theme}`}>\r\n      <Router>\r\n        <Header toggleTheme={toggleTheme} theme={theme} onSearch={setSearchQuery} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage theme={theme} searchQuery={searchQuery} />} />\r\n          <Route path=\"/movies\" element={<MoviesPage theme={theme} searchQuery={searchQuery} />} />\r\n          <Route path=\"/movies/:movieId\" element={<MovieDetailPage />} />\r\n          <Route path=\"/tv-shows\" element={<TVShowsPage theme={theme} searchQuery={searchQuery} />} />\r\n          <Route path=\"/tv-shows/:showId\" element={<TVShowDetailPage />} />\r\n        </Routes>\r\n        <Footer theme={theme} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './theme.css'; // Add this line to import theme.css\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}